// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Sidebar/> renders correctly if prop expanded set false 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql hpZSwh"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf jhmGKh"
  />
</aside>
`;

exports[`<Sidebar/> renders correctly if prop expanded set true 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql cilTGP"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf bhBdLp"
  />
</aside>
`;

exports[`<Sidebar/> renders correctly if prop haveToggleButton set false 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql cilTGP"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf bhBdLp"
  />
</aside>
`;

exports[`<Sidebar/> renders correctly if prop haveToggleButton set true 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql depIyH"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf loJghn"
  >
    <button
      className="SidebarToggleStyled__SidebarToggleStyled-KYhye jTJvlU"
      onClick={[Function]}
    >
      <div
        className="ToggleIconStyled__ToggleIconStyled-fKRibG bVlGZF"
      >
        <span
          className="fa fa-angle-left IconFontAwesomeStyled__IconFontAwesomeStyled-cpbEq eVGVUG"
          color=""
          onClick={[Function]}
          rotate={0}
          size="normal"
        />
      </div>
      <div
        className="ToggleContentStyled__ToggleContentStyled-kQGYBy iflKfw"
      >
        <div
          className="ToggleTextStyled__ToggleTextStyled-gUfxuQ hxVmIj"
        >
          Collapse
        </div>
      </div>
    </button>
  </div>
</aside>
`;

exports[`<Sidebar/> renders correctly if prop haveToggleButton set true and toggleButtonText set 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql depIyH"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf loJghn"
  >
    <button
      className="SidebarToggleStyled__SidebarToggleStyled-KYhye jTJvlU"
      onClick={[Function]}
    >
      <div
        className="ToggleIconStyled__ToggleIconStyled-fKRibG bVlGZF"
      >
        <span
          className="fa fa-angle-left IconFontAwesomeStyled__IconFontAwesomeStyled-cpbEq eVGVUG"
          color=""
          onClick={[Function]}
          rotate={0}
          size="normal"
        />
      </div>
      <div
        className="ToggleContentStyled__ToggleContentStyled-kQGYBy iflKfw"
      >
        <div
          className="ToggleTextStyled__ToggleTextStyled-gUfxuQ hxVmIj"
        >
          test
        </div>
      </div>
    </button>
  </div>
</aside>
`;

exports[`<Sidebar/> renders correctly if prop right set false 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql cilTGP"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf bhBdLp"
  />
</aside>
`;

exports[`<Sidebar/> renders correctly if prop right set true 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql cilTGP"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf bhBdLp"
  />
</aside>
`;

exports[`<Sidebar/> renders correctly if prop spread set true 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql cilTGP"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf bhBdLp"
  />
</aside>
`;

exports[`<Sidebar/> renders correctly with default props 1`] = `
<aside
  className="SidebarStyled__SidebarStyled-fRvCql cilTGP"
>
  <div
    className="SidebarBoxStyled__SidebarBoxStyled-hutMIf bhBdLp"
  />
</aside>
`;

exports[`<SidebarRegion/> renders correctly if prop bordered 1`] = `
<div
  className="SidebarRegionStyled__SidebarRegionStyled-cYXjEi eZEPaB"
/>
`;

exports[`<SidebarRegion/> renders correctly if prop scrollable 1`] = `
<div
  className="SidebarRegionStyled__SidebarRegionStyled-cYXjEi eFCXri"
/>
`;

exports[`<SidebarRegion/> renders correctly if prop scrollableMinHeight set 0 1`] = `
<div
  className="SidebarRegionStyled__SidebarRegionStyled-cYXjEi cWiuQb"
/>
`;

exports[`<SidebarRegion/> renders correctly if prop spread 1`] = `
<div
  className="SidebarRegionStyled__SidebarRegionStyled-cYXjEi hDDyJh"
/>
`;

exports[`<SidebarRegion/> renders correctly with default props 1`] = `
<div
  className="SidebarRegionStyled__SidebarRegionStyled-cYXjEi cWiuQb"
/>
`;

exports[`<SidebarToggle/> renders correctly if prop toggleButtonText set 1`] = `
<button
  className="SidebarToggleStyled__SidebarToggleStyled-KYhye jTJvlU"
  onClick={[Function]}
>
  <div
    className="ToggleIconStyled__ToggleIconStyled-fKRibG fClZwD"
  >
    <span
      className="fa fa-angle-left IconFontAwesomeStyled__IconFontAwesomeStyled-cpbEq eVGVUG"
      color=""
      onClick={[Function]}
      rotate={0}
      size="normal"
    />
  </div>
  <div
    className="ToggleContentStyled__ToggleContentStyled-kQGYBy iflKfw"
  >
    <div
      className="ToggleTextStyled__ToggleTextStyled-gUfxuQ CRanA"
    >
      test
    </div>
  </div>
</button>
`;

exports[`<SidebarToggle/> renders correctly with default props 1`] = `
<button
  className="SidebarToggleStyled__SidebarToggleStyled-KYhye jTJvlU"
  onClick={[Function]}
>
  <div
    className="ToggleIconStyled__ToggleIconStyled-fKRibG fClZwD"
  >
    <span
      className="fa fa-angle-left IconFontAwesomeStyled__IconFontAwesomeStyled-cpbEq eVGVUG"
      color=""
      onClick={[Function]}
      rotate={0}
      size="normal"
    />
  </div>
  <div
    className="ToggleContentStyled__ToggleContentStyled-kQGYBy iflKfw"
  >
    <div
      className="ToggleTextStyled__ToggleTextStyled-gUfxuQ CRanA"
    >
      Collapse
    </div>
  </div>
</button>
`;
